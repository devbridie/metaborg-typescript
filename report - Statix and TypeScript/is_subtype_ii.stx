  is_subtype(Object(p1), Object(p2)) :- {properties}
    query decl
      filter pathMatch[e] and { Property{_@_} }
      min pathLt[] and { Property{x@_} , Property{x@_} }
      in p1 |-> properties,
    recurse_properties(p2, properties).
  
constraint 
  recurse_properties maps compare_properties(*, list(*)).

constraint
  compare_properties : scope * (path * occurrence)
  
  compare_properties(properties, (p2, d2)) :-
    d2 in properties |-> [(p1, d1)]
	?type[d1, T1] in p1.dst,
	?type[d2, T2] in p2.dst,
	is_subtype(T1, T2).