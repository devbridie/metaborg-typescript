
module test
language typescript

test structural instead of nominal [[
interface A { }
class B implements A { }
class X { 
  b: B;
}
class Y extends X {
  b: A;  
} 
]] transform "Compare -> Test against reference result"    

test must copy properties [[
interface A { num: number }
class B implements A { }
]] analysis fails

test interface inheritance [[
interface A { num: number }
interface B extends A { num2: number }

class C implements B { }
]] transform "Compare -> Test against reference result" 


test interface inheritance [[
interface A { num: number }
interface B extends A { num2: number }

class C implements B { num: number } 
]] transform "Compare -> Test against reference result"  

test interface inheritance [[ 
interface A { num: number }
interface B extends A { num2: number }

class C implements B { num2: number }
]] transform "Compare -> Test against reference result" 

test interface inheritance [[ 
interface A { num: number }
interface B extends A { num2: number } 

class C implements B { num: number; num2: number }
]] transform "Compare -> Test against reference result"