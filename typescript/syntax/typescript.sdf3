module typescript

imports
  
  Common

context-free start-symbols
  
  Start
  
  Statement  
  
  Expression
  
  Type
  
  NameTypePair
  NameExprPair

context-free syntax
  
  Start.Program = Statement*
  
  Statement.Declaration = <let <ID> : <Type> = <Expression>;>
  Statement.TypeDecl = <type <ID> = <Type>;>
  
  Expression.NumberLiteral  = INT
  Expression.Identifier     = ID
  Expression.StringLiteral  = <"<ID>">
  Expression.BooleanLiteral = "false" {prefer}
  Expression.BooleanLiteral = "true" {prefer}
  Expression.ObjectLiteral  = <{ <{NameExprPair ","}*> }>
  
  Type.Named = ID  
  Type.Union = <<Type> | <Type>> {left}
  Type.Intersection = <<Type> & <Type>> {left}
  Type.Structure = "{" {NameTypePair ","}* "}"
  
  NameTypePair = ID ":" Type
  NameExprPair = ID ":" Expression